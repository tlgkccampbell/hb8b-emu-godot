[gd_scene load_steps=22 format=2]

[ext_resource path="res://Scenes/Emulator/DisplayBuffers/Rastermask/Rastermask.cs" type="Script" id=1]
[ext_resource path="res://Scenes/Emulator/DisplayBuffers/DisplayBuffers.cs" type="Script" id=2]
[ext_resource path="res://Scenes/Emulator/DisplayBuffers/Rastermask/RastermaskSprite.cs" type="Script" id=3]
[ext_resource path="res://Scenes/Emulator/DisplayCanvas/Overlay/FPSDisplay.cs" type="Script" id=4]
[ext_resource path="res://Scenes/Emulator/EmulatorTextTiles.tres" type="TileSet" id=5]
[ext_resource path="res://Scenes/Emulator/DisplayCanvas/DisplayCanvas.cs" type="Script" id=6]

[sub_resource type="ImageTexture" id=14]
flags = 0
flags = 0
size = Vector2( 800, 600 )

[sub_resource type="VisualShaderNodeVectorOp" id=15]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=16]

[sub_resource type="VisualShaderNodeTextureUniform" id=4]
uniform_name = "FramebufferOld"

[sub_resource type="VisualShaderNodeTextureUniform" id=5]
uniform_name = "FramebufferNew"

[sub_resource type="VisualShaderNodeTextureUniform" id=6]
uniform_name = "Rastermask"

[sub_resource type="VisualShaderNodeVectorOp" id=7]
default_input_values = [ 0, Vector3( 1, 1, 1 ), 1, Vector3( 0, 0, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=8]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=9]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=10]

[sub_resource type="VisualShader" id=2]
code = "shader_type canvas_item;
uniform sampler2D FramebufferOld;
uniform sampler2D Rastermask;
uniform sampler2D FramebufferNew;



void vertex() {
// Output:0

}

void fragment() {
// TextureUniform:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 n_tex_read = texture(FramebufferOld, UV.xy);
		n_out3p0 = n_tex_read.rgb;
		n_out3p1 = n_tex_read.a;
	}

// TextureUniform:5
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 n_tex_read = texture(Rastermask, UV.xy);
		n_out5p0 = n_tex_read.rgb;
		n_out5p1 = n_tex_read.a;
	}

// VectorOp:6
	vec3 n_in6p0 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out6p0 = n_in6p0 - n_out5p0;

// VectorOp:7
	vec3 n_out7p0 = n_out3p0 * n_out6p0;

// TextureUniform:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 n_tex_read = texture(FramebufferNew, UV.xy);
		n_out4p0 = n_tex_read.rgb;
		n_out4p1 = n_tex_read.a;
	}

// VectorOp:8
	vec3 n_out8p0 = n_out5p0 * n_out4p0;

// VectorOp:9
	vec3 n_out9p0 = n_out7p0 + n_out8p0;

// VectorOp:10
	vec3 n_in10p1 = vec3(1.00000, 0.00000, 0.00000);
	vec3 n_out10p0 = n_out5p0 * n_in10p1;

// VectorOp:11
	vec3 n_out11p0 = n_out9p0 + n_out10p0;

// Output:0
	COLOR.rgb = n_out11p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 0, 296.5 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1380, 360 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( 680, 200 )
nodes/fragment/4/node = SubResource( 5 )
nodes/fragment/4/position = Vector2( 680, 600 )
nodes/fragment/5/node = SubResource( 6 )
nodes/fragment/5/position = Vector2( 400, 440 )
nodes/fragment/6/node = SubResource( 7 )
nodes/fragment/6/position = Vector2( 700, 400 )
nodes/fragment/7/node = SubResource( 8 )
nodes/fragment/7/position = Vector2( 940, 320 )
nodes/fragment/8/node = SubResource( 9 )
nodes/fragment/8/position = Vector2( 940, 500 )
nodes/fragment/9/node = SubResource( 10 )
nodes/fragment/9/position = Vector2( 1160, 400 )
nodes/fragment/10/node = SubResource( 15 )
nodes/fragment/10/position = Vector2( 840, 840 )
nodes/fragment/11/node = SubResource( 16 )
nodes/fragment/11/position = Vector2( 1300, 640 )
nodes/fragment/connections = PoolIntArray( 4, 0, 8, 1, 5, 0, 8, 0, 3, 0, 7, 0, 6, 0, 7, 1, 5, 0, 6, 1, 8, 0, 9, 1, 7, 0, 9, 0, 5, 0, 10, 0, 9, 0, 11, 0, 10, 0, 11, 1, 11, 0, 0, 0 )

[sub_resource type="ViewportTexture" id=12]
viewport_path = NodePath("DisplayBuffers/Framebuffer2")

[sub_resource type="ViewportTexture" id=11]
viewport_path = NodePath("DisplayBuffers/Framebuffer1")

[sub_resource type="ViewportTexture" id=13]
viewport_path = NodePath("DisplayBuffers/Rastermask")

[sub_resource type="ShaderMaterial" id=3]
resource_local_to_scene = true
shader = SubResource( 2 )
shader_param/FramebufferOld = SubResource( 11 )
shader_param/Rastermask = SubResource( 13 )
shader_param/FramebufferNew = SubResource( 12 )

[node name="Emulator" type="Node2D"]

[node name="DisplayBuffers" type="Node" parent="."]
script = ExtResource( 2 )

[node name="Framebuffer1" type="Viewport" parent="DisplayBuffers"]
size = Vector2( 640, 480 )
render_target_v_flip = true

[node name="TileMap" type="TileMap" parent="DisplayBuffers/Framebuffer1"]
tile_set = ExtResource( 5 )
cell_size = Vector2( 8, 16 )
cell_custom_transform = Transform2D( 0, 0, 0, 0, 0, 0 )
format = 1

[node name="Framebuffer2" type="Viewport" parent="DisplayBuffers"]
size = Vector2( 640, 480 )
render_target_v_flip = true

[node name="TileMap" type="TileMap" parent="DisplayBuffers/Framebuffer2"]
tile_set = ExtResource( 5 )
cell_size = Vector2( 8, 16 )
cell_custom_transform = Transform2D( 0, 0, 0, 0, 0, 0 )
format = 1

[node name="Rastermask" type="Viewport" parent="DisplayBuffers"]
size = Vector2( 640, 480 )
render_target_v_flip = true
script = ExtResource( 1 )

[node name="RastermaskSprite" type="Sprite" parent="DisplayBuffers/Rastermask"]
texture = SubResource( 14 )
centered = false
script = ExtResource( 3 )

[node name="DisplayCanvas" type="CanvasLayer" parent="."]
script = ExtResource( 6 )

[node name="Display" type="ColorRect" parent="DisplayCanvas"]
material = SubResource( 3 )
anchor_right = 1.0
anchor_bottom = 1.0

[node name="Overlay" type="Node2D" parent="DisplayCanvas"]

[node name="FPSPanel" type="ColorRect" parent="DisplayCanvas/Overlay"]
margin_left = 8.0
margin_top = 8.0
margin_right = 100.0
margin_bottom = 40.0
size_flags_horizontal = 0
size_flags_vertical = 0
color = Color( 0, 0, 0, 0.784314 )

[node name="FPSDisplay" type="Label" parent="DisplayCanvas/Overlay/FPSPanel"]
margin_left = 8.0
margin_top = 8.0
margin_right = 84.0
margin_bottom = 24.0
text = "60 FPS"
script = ExtResource( 4 )
